{"version":3,"sources":["serviceWorker.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getItems","count","offset","Array","from","length","v","k","map","id","Date","getTime","content","stateItemList","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","justifyContent","border","background","fontWeight","getListStyle","isDraggingOver","width","alignItemsStyle","display","buttonStyle","marginRight","marginLeft","QuoteApp","useState","stateItem","setStateItem","editableText","item","type","onSave","value","val","itemId","newState","forEach","findResult","find","onSaveName","editOnViewClick","hideIcons","submitOnUnfocus","submitOnEnter","viewProps","style","height","inputProps","fontSize","editButtonClassName","saveButtonClassName","cancelButtonClassName","viewContainerClassName","validation","validationMessage","droppableCoatList","_","i","push","key","droppableId","provided","snapshot","ref","innerRef","droppableProps","index","draggableId","draggableProps","dragHandleProps","placeholder","onClick","onClickCoatNo","a","concat","gameFinishMember","slice","j","waitLastMember","pop","nextGameMember","shift","filter","group","gameFinish","onDragEnd","result","source","destination","sInd","dInd","items","list","startIndex","endIndex","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","move","sessionStorage","setItem","JSON","stringify","parse","getItem","localStateItemList","rows","editButtonContent","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.676886d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport EdiText from 'react-editext'\r\nimport './index.css'\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k + offset}-${new Date().getTime()}`,\r\n    content: `${k + 1 + offset}`\r\n  }));\r\n\r\nvar stateItemList = [];\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n\r\n  padding: 5,\r\n  margin: 5,\r\n  justifyContent: \"center\",\r\n  border: \"solid\",\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"white\",\r\n\r\n  fontWeight: \"bold\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: 2,\r\n  margin: 2,\r\n  width: \"31%\",\r\n});\r\n\r\nconst alignItemsStyle = {\r\n  margin: 2,\r\n  display: \"flex\",\r\n  justifyContent: \"center\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  marginRight: 12,\r\n  marginLeft: 12,\r\n};\r\n\r\nfunction QuoteApp() {\r\n  // getItems = (count, offset = 0)\r\n  const [stateItem, setStateItem] = useState([getItems(4), getItems(4, 4), getItems(4, 8), getItems(6, 12), getItems(7, 18)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(stateItem[sInd], source.index, destination.index);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = items;\r\n      setStateItem(newState);\r\n    } else {\r\n      const result = move(stateItem[sInd], stateItem[dInd], source, destination);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setStateItem(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  function undoGameFinish() {\r\n    if (stateItemList.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const newState = stateItemList[stateItemList.length - 1].slice();\r\n    stateItemList.pop();\r\n    setStateItem(newState);\r\n  }\r\n\r\n  const onSaveName = (val, itemId) => {\r\n    const newState = [...stateItem];\r\n    newState.forEach(state => {\r\n      var findResult = state.find((item) => item.id === itemId);\r\n      if (findResult) {\r\n        findResult.content = val;\r\n      }\r\n    })\r\n    setStateItem(newState);\r\n  }\r\n  const onSaveAll = (val) => {\r\n\r\n  }\r\n\r\n  const gameFinish = (onClickCoatNo) => {\r\n    // コートの人数が4人以外の時は試合終了させない\r\n    if (stateItem[onClickCoatNo].length !== 4) {\r\n      return;\r\n    }\r\n\r\n    // シャローコピー回避のためstateItemListの中身を一つずつ退避\r\n    const a = [];\r\n    stateItem.map((item) => a.push([].concat(item)));\r\n    stateItemList.push(a);\r\n\r\n    // 試合が終わった4人を退避\r\n    const gameFinishMember = stateItem[onClickCoatNo].slice(0, 4);\r\n    // 待機の末尾にいるメンバーを退避 1 or 2\r\n    const j = stateItemList.length % 2;\r\n    const waitLastMember = stateItem[3].slice(stateItem[3].length - (j + 1), stateItem[3].length);\r\n\r\n    const newState = [...stateItem];\r\n    // 待機の末尾2人を削除\r\n    [...Array(j + 1)].map(() => newState[3].pop());\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(0, 1)];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(2, 3)];\r\n    newState[3] = [...newState[3], ...waitLastMember];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(1, 2)];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(3, 4)];\r\n\r\n    const nextGameMember = newState[3].slice(0, 4);\r\n    newState[onClickCoatNo] = nextGameMember;\r\n    [...Array(4)].map(() => newState[3].shift());\r\n\r\n    setStateItem(newState.filter(group => group.length));\r\n  }\r\n\r\n  function storageSave() {\r\n    sessionStorage.setItem(\"stateItem\", JSON.stringify(stateItem));\r\n    sessionStorage.setItem(\"stateItemList\", JSON.stringify(stateItemList));\r\n  }\r\n\r\n  function storageLoad() {\r\n    const stateItem = JSON.parse(sessionStorage.getItem(\"stateItem\"));\r\n    const localStateItemList = JSON.parse(sessionStorage.getItem(\"stateItemList\"));\r\n    if (!stateItem || !localStateItemList) {\r\n      return;\r\n    }\r\n\r\n    setStateItem(stateItem.filter(group => group.length));\r\n    stateItemList = localStateItemList;\r\n  }\r\n\r\n  function editableText(item) {\r\n    return <EdiText\r\n      type='text'\r\n      onSave={value => onSaveName(value, item.id)}\r\n      value={item.content}\r\n      editOnViewClick={true}\r\n      hideIcons={true}\r\n      submitOnUnfocus\r\n      submitOnEnter\r\n      viewProps={{\r\n        style: {\r\n          width: \"4em\",\r\n          height: \"1em\",\r\n        }\r\n      }}\r\n      inputProps={{\r\n        style: {\r\n          fontSize: 16\r\n        }\r\n      }}\r\n      editButtonClassName=\"custom-edit-button-hidden\"\r\n      saveButtonClassName=\"custom-edit-button-hidden\"\r\n      cancelButtonClassName=\"custom-edit-button-hidden\"\r\n      viewContainerClassName='view-container'\r\n      validation={val => (val.length > 0 && val.length < 5)}\r\n      validationMessage=\"1-4文字を許容\"\r\n    />;\r\n  }\r\n\r\n  var droppableCoatList = [];\r\n  [...Array(3)].map((_, i) =>\r\n    droppableCoatList.push(\r\n      <Droppable key={i} droppableId={`${i}`}>\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            第{i + 1}コート\r\n            {stateItem[i].map((item, index) => (\r\n              <Draggable\r\n                key={item.id}\r\n                draggableId={item.id}\r\n                index={index}\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                      snapshot.isDragging,\r\n                      provided.draggableProps.style\r\n                    )}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\"\r\n                      }}\r\n                    >\r\n                      {editableText(item)}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n            <button type=\"button\" style={{ height: 40, width: \"100%\" }} onClick={() => gameFinish(i)}>終了</button>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    )\r\n  )\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div>\r\n        <div style={alignItemsStyle}>\r\n          {droppableCoatList}\r\n        </div>\r\n        <div style={alignItemsStyle}>\r\n          <Droppable key={3} droppableId={`${3}`}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                順番待ち\r\n                {stateItem[3].map((item, index) => (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\"\r\n                          }}\r\n                        >\r\n                          {editableText(item)}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <Droppable key={4} droppableId={`${4}`}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                休み\r\n                {stateItem[4].map((item, index) => (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\"\r\n                          }}\r\n                        >\r\n                          {editableText(item)}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n        <div style={alignItemsStyle}>\r\n          {stateItemList.length}ゲーム終了\r\n          <button type=\"button\" onClick={undoGameFinish} style={buttonStyle}>Ctrl+Z</button>\r\n          <button type=\"button\" onClick={storageSave} style={buttonStyle}>Save</button>\r\n          <button type=\"button\" onClick={storageLoad} style={buttonStyle}>Load</button>\r\n        </div>\r\n        <div style={alignItemsStyle}>\r\n          <EdiText\r\n            type='textarea'\r\n            inputProps={{\r\n              rows: 1,\r\n              width: \"3em\",\r\n            }}\r\n            viewProps={{\r\n              style: {\r\n                width: \"6em\",\r\n              }\r\n            }}\r\n            editOnViewClick={true}\r\n            hideIcons={true}\r\n            submitOnUnfocus\r\n            submitOnEnter\r\n            value=\"\"\r\n            onSave={value => onSaveAll(value)}\r\n            saveButtonClassName=\"custom-edit-button-hidden\"\r\n            cancelButtonClassName=\"custom-edit-button-hidden\"\r\n            editButtonClassName=\"custom-edit-button-all\"\r\n            viewContainerClassName='view-container'\r\n            editButtonContent='一括編集'\r\n          />\r\n        </div>\r\n      </div>\r\n    </DragDropContext >\r\n  );\r\n}\r\n\r\nReactDOM.render(<QuoteApp />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}