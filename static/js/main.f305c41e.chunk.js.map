{"version":3,"sources":["index.js"],"names":["getItems","count","offset","Array","from","length","v","k","map","id","Date","getTime","content","getItemStyle","isDragging","draggableStyle","userSelect","padding","width","margin","background","getListStyle","isDraggingOver","QuoteApp","useState","stateItem","setStateItem","gameEnd1","gameFinishMember","slice","waitLast2Member","newState","pop","nextGameMember","shift","filter","group","gameEnd2","gameEnd3","onDragEnd","result","source","destination","sInd","droppableId","dInd","items","list","startIndex","endIndex","splice","removed","reorder","index","droppableSource","droppableDestination","sourceClone","destClone","move","style","display","key","provided","snapshot","ref","innerRef","droppableProps","item","draggableId","draggableProps","dragHandleProps","justifyContent","placeholder","type","onClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.f305c41e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k + offset}-${new Date().getTime()}`,\r\n    content: `No${k + 1 + offset}`\r\n  }));\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: 3,\r\n  width: 50,\r\n  margin: \"0 auto\",\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: 4,\r\n  margin: \"4\",\r\n  width: 80,\r\n});\r\n\r\nfunction QuoteApp() {\r\n  // getItems = (count, offset = 0)\r\n  const [stateItem, setStateItem] = useState([getItems(4), getItems(4, 4), getItems(4, 8), getItems(7, 12), getItems(6, 19)]);\r\n  // const [stateItem, setStateItem] = useState([getItems(4)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(stateItem[sInd], source.index, destination.index);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = items;\r\n      setStateItem(newState);\r\n    } else {\r\n      const result = move(stateItem[sInd], stateItem[dInd], source, destination);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setStateItem(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  function gameEnd1() {\r\n    const coatNo = 0;\r\n    // コートの人数が4人以下の時は試合終了させない\r\n    if (stateItem[coatNo].length < 4) {\r\n      return;\r\n    }\r\n\r\n    // 試合が終わった4人を退避\r\n    const gameFinishMember = stateItem[coatNo].slice(0, 4);\r\n    // 待機の末尾2人をコピー\r\n    const waitLast2Member = stateItem[3].slice(stateItem[3].length - 2, stateItem[3].length);\r\n\r\n    const newState = [...stateItem];\r\n    // 待機の末尾2人を削除\r\n    [...Array(2)].map(() => newState[3].pop());\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(0, 2)];\r\n    newState[3] = [...newState[3], ...waitLast2Member];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(2, 4)];\r\n\r\n    const nextGameMember = newState[3].slice(0, 4);\r\n    newState[coatNo] = nextGameMember;\r\n    [...Array(4)].map(() => newState[3].shift());\r\n\r\n    setStateItem(newState.filter(group => group.length));\r\n  }\r\n  function gameEnd2() {\r\n    const coatNo = 1;\r\n    // コートの人数が4人以下の時は試合終了させない\r\n    if (stateItem[coatNo].length < 4) {\r\n      return;\r\n    }\r\n\r\n    // 試合が終わった4人を退避\r\n    const gameFinishMember = stateItem[coatNo].slice(0, 4);\r\n    // 待機の末尾2人をコピー\r\n    const waitLast2Member = stateItem[3].slice(stateItem[3].length - 2, stateItem[3].length);\r\n\r\n    const newState = [...stateItem];\r\n    // 待機の末尾2人を削除\r\n    [...Array(2)].map(() => newState[3].pop());\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(0, 2)];\r\n    newState[3] = [...newState[3], ...waitLast2Member];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(2, 4)];\r\n\r\n    const nextGameMember = newState[3].slice(0, 4);\r\n    newState[coatNo] = nextGameMember;\r\n    [...Array(4)].map(() => newState[3].shift());\r\n\r\n    setStateItem(newState.filter(group => group.length));\r\n  }\r\n  function gameEnd3() {\r\n    const coatNo = 2;\r\n    // コートの人数が4人以下の時は試合終了させない\r\n    if (stateItem[coatNo].length < 4) {\r\n      return;\r\n    }\r\n\r\n    // 試合が終わった4人を退避\r\n    const gameFinishMember = stateItem[coatNo].slice(0, 4);\r\n    // 待機の末尾2人をコピー\r\n    const waitLast2Member = stateItem[3].slice(stateItem[3].length - 2, stateItem[3].length);\r\n\r\n    const newState = [...stateItem];\r\n    // 待機の末尾2人を削除\r\n    [...Array(2)].map(() => newState[3].pop());\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(0, 2)];\r\n    newState[3] = [...newState[3], ...waitLast2Member];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(2, 4)];\r\n\r\n    const nextGameMember = newState[3].slice(0, 4);\r\n    newState[coatNo] = nextGameMember;\r\n    [...Array(4)].map(() => newState[3].shift());\r\n\r\n    setStateItem(newState.filter(group => group.length));\r\n  }\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Droppable key={0} droppableId={`${0}`}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div>第1コート</div>\r\n              {stateItem[0].map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n              <button type=\"button\" onClick={gameEnd1} style={{ margin: \"3px\", width: \"60px\" }}>終了</button>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable key={1} droppableId={`${1}`}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div>第2コート</div>\r\n              {stateItem[1].map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n              <button type=\"button\" onClick={gameEnd2} style={{ margin: \"3px\", width: \"60px\" }}>終了</button>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable key={2} droppableId={`${2}`}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div>第3コート</div>\r\n              {stateItem[2].map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n              <button type=\"button\" onClick={gameEnd3} style={{ margin: \"3px\", width: \"60px\" }}>終了</button>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Droppable key={3} droppableId={`${3}`}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div>順番待ち</div>\r\n              {stateItem[3].map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <Droppable key={4} droppableId={`${4}`}>\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n              {...provided.droppableProps}\r\n            >\r\n              <div>休み</div>\r\n              {stateItem[4].map((item, index) => (\r\n                <Draggable\r\n                  key={item.id}\r\n                  draggableId={item.id}\r\n                  index={index}\r\n                >\r\n                  {(provided, snapshot) => (\r\n                    <div\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={getItemStyle(\r\n                        snapshot.isDragging,\r\n                        provided.draggableProps.style\r\n                      )}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"space-around\"\r\n                        }}\r\n                      >\r\n                        {item.content}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    </DragDropContext >\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<QuoteApp />, rootElement);\r\n"],"sourceRoot":""}