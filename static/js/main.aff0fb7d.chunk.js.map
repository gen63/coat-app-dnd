{"version":3,"sources":["serviceWorker.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getItems","count","offset","Array","from","length","v","k","map","id","Date","getTime","content","stateItemList","finishGameCount","getItemStyle","isDragging","draggableStyle","userSelect","padding","margin","justifyContent","border","background","getListStyle","isDraggingOver","width","alignItemsStyle","display","QuoteApp","useState","stateItem","setStateItem","droppableCoatList","_","i","push","key","droppableId","provided","snapshot","ref","innerRef","style","droppableProps","item","index","draggableId","draggableProps","dragHandleProps","placeholder","type","onClick","coatNo","a","concat","gameFinishMember","slice","waitLast2Member","newState","pop","nextGameMember","shift","filter","group","gameEnd","onDragEnd","result","source","destination","sInd","dInd","items","list","startIndex","endIndex","splice","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","move","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aff0fb7d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k + offset}-${new Date().getTime()}`,\r\n    content: `No${k + 1 + offset}`\r\n  }));\r\n\r\nconst stateItemList = [];\r\nvar finishGameCount = 0;\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Moves an item from one list to another list.\r\n */\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n\r\n  padding: 5,\r\n  margin: 5,\r\n  justifyContent: \"center\",\r\n  border: \"solid\",\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: 2,\r\n  margin: 2,\r\n  width: \"31%\",\r\n});\r\n\r\nconst alignItemsStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"center\"\r\n};\r\n\r\nfunction QuoteApp() {\r\n  // getItems = (count, offset = 0)\r\n  const [stateItem, setStateItem] = useState([getItems(4), getItems(4, 4), getItems(4, 8), getItems(7, 12), getItems(6, 19)]);\r\n\r\n  function onDragEnd(result) {\r\n    const { source, destination } = result;\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const sInd = +source.droppableId;\r\n    const dInd = +destination.droppableId;\r\n\r\n    if (sInd === dInd) {\r\n      const items = reorder(stateItem[sInd], source.index, destination.index);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = items;\r\n      setStateItem(newState);\r\n    } else {\r\n      const result = move(stateItem[sInd], stateItem[dInd], source, destination);\r\n      const newState = [...stateItem];\r\n      newState[sInd] = result[sInd];\r\n      newState[dInd] = result[dInd];\r\n\r\n      setStateItem(newState.filter(group => group.length));\r\n    }\r\n  }\r\n\r\n  function gameEndUndo() {\r\n    if (stateItemList.length < 1) {\r\n      return;\r\n    }\r\n\r\n    finishGameCount--;\r\n\r\n    const newState = stateItemList[stateItemList.length - 1].slice();\r\n    stateItemList.pop();\r\n    setStateItem(newState);\r\n  }\r\n\r\n  const gameEnd = (coatNo) => {\r\n    // const coatNo = 0;\r\n    // コートの人数が4人以下の時は試合終了させない\r\n    if (stateItem[coatNo].length !== 4) {\r\n      return;\r\n    }\r\n\r\n    finishGameCount++;\r\n\r\n    // 現在の状態を退避\r\n    const a = [];\r\n    stateItem.map((item) => a.push([].concat(item)));\r\n    stateItemList.push(a);\r\n\r\n    // 試合が終わった4人を退避\r\n    const gameFinishMember = stateItem[coatNo].slice(0, 4);\r\n    // 待機の末尾2人をコピー\r\n    const waitLast2Member = stateItem[3].slice(stateItem[3].length - 2, stateItem[3].length);\r\n\r\n    const newState = [...stateItem];\r\n    // 待機の末尾2人を削除\r\n    [...Array(2)].map(() => newState[3].pop());\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(2, 3)];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(0, 1)];\r\n    newState[3] = [...newState[3], ...waitLast2Member];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(3, 4)];\r\n    newState[3] = [...newState[3], ...gameFinishMember.slice(1, 2)];\r\n\r\n    const nextGameMember = newState[3].slice(0, 4);\r\n    newState[coatNo] = nextGameMember;\r\n    [...Array(4)].map(() => newState[3].shift());\r\n\r\n    setStateItem(newState.filter(group => group.length));\r\n  }\r\n\r\n  var droppableCoatList = [];\r\n  [...Array(3)].map((_, i) =>\r\n    droppableCoatList.push(\r\n      <Droppable key={i} droppableId={`${i}`}>\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={getListStyle(snapshot.isDraggingOver)}\r\n            {...provided.droppableProps}\r\n          >\r\n            第{i + 1}コート\r\n            {stateItem[i].map((item, index) => (\r\n              <Draggable\r\n                key={item.id}\r\n                draggableId={item.id}\r\n                index={index}\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={getItemStyle(\r\n                      snapshot.isDragging,\r\n                      provided.draggableProps.style\r\n                    )}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\"\r\n                      }}\r\n                    >\r\n                      {item.content}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n            <button type=\"button\" onClick={() => gameEnd(i)}>終了</button>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    )\r\n  )\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div>\r\n        <div style={alignItemsStyle}>\r\n          {droppableCoatList}\r\n        </div>\r\n        <div style={alignItemsStyle}>\r\n          <button type=\"button\" onClick={gameEndUndo}>Ctrl+Z</button>　{finishGameCount}ゲーム終了\r\n        </div>\r\n        <div style={alignItemsStyle}>\r\n          <Droppable key={3} droppableId={`${3}`}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                順番待ち\r\n                {stateItem[3].map((item, index) => (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\"\r\n                          }}\r\n                        >\r\n                          {item.content}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <Droppable key={4} droppableId={`${4}`}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                style={getListStyle(snapshot.isDraggingOver)}\r\n                {...provided.droppableProps}\r\n              >\r\n                休み\r\n                {stateItem[4].map((item, index) => (\r\n                  <Draggable\r\n                    key={item.id}\r\n                    draggableId={item.id}\r\n                    index={index}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\"\r\n                          }}\r\n                        >\r\n                          {item.content}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </div>\r\n    </DragDropContext >\r\n  );\r\n}\r\n\r\nReactDOM.render(<QuoteApp />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}